@using MotorApp.Models;
@model MotorApp.BusinessEntities.Insurance
@{
    ViewBag.Title = "MotorInsurance";
    Layout = "~/Views/Shared/_Layout.cshtml";

}


@{
    List<SelectListItem> lstBT = new List<SelectListItem>();
    lstBT.Add(new SelectListItem
    {
        Text = "Admin",
        Value = "Admin"
    });
    lstBT.Add(new SelectListItem
    {
        Text = "Agent",
        Value = "Agent"

    });
    lstBT.Add(new SelectListItem
    {
        Text = "Broker",
        Value = "Broker"
    });
    lstBT.Add(new SelectListItem
    {
        Text = "Branches",
        Value = "Branches"
    });
    lstBT.Add(new SelectListItem
    {
        Text = "DirectSales",
        Value = "DirectSales"
    });
}
@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Lost",
        Value = "Lost"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Renewed",
        Value = "Renewed",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "Under Process",
        Value = "Under Process"
    });
}
@{
    List<SelectListItem> lstInsType = new List<SelectListItem>();
    lstInsType.Add(new SelectListItem
    {
        Text = "Travel",
        Value = "Travel"
    });
    lstInsType.Add(new SelectListItem
    {
        Text = "Motor",
        Value = "Motor",
        Selected = true
    });
    lstInsType.Add(new SelectListItem
    {
        Text = "Individual",
        Value = "Individual"
    });
    lstInsType.Add(new SelectListItem
    {
        Text = "Domestic",
        Value = "Domestic"
    });
}

@*@using (Html.BeginForm("InsertMotorIns", "Home", FormMethod.Post))
    {*@
<div id="wrapper">
    <!-- Sidebar -->
    <div id="content-wrapper" class="d-flex flex-column">
        <div id="content">
            <!-- TopBar -->
            <!-- Topbar -->
            <!-- Container Fluid-->
            <div class="container-fluid" id="container-wrapper">
                <div class="d-sm-flex align-items-center justify-content-between mb-4">
                    <h1 class="h3 mb-0 text-gray-800">Add New Policy</h1>
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="./">Home</a></li>
                        <li class="breadcrumb-item">Masters</li>
                        <li class="breadcrumb-item active" aria-current="page">Add New Policy</li>
                    </ol>
                </div>
                <div class="row">
                    <div class="col-lg-12 mb-4">
                        <div class="card">
                            <div class="card-body">
                                <form id="MotorForm">
                                    <div id="step-1" class="tab-pane" role="tabpanel" aria-labelledby="step-1">
                                        <div class="col-12">
                                            <div class="form-group row hide">
                                                @*@Html.LabelFor(model => model.InsuranceID, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.InsuranceID, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            </div>*@
                                                @Html.HiddenFor(model => model.InsuranceID)

                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.DivisionCode, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.DivisionCode, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.DivisionName, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.DivisionName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            @*<div class="form-group row">
            @Html.LabelFor(model => model.BusinessType, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.BusinessType, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            </div>
        </div>*@
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.BusinessType, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">

                                                    @Html.DropDownListFor(model => model.BusinessType, lstBT, "-- Select BusinessType --",
                                                   new { @class = "form-control form-control-sm", @onchange = "javascript:GetUsers(this.value);" })

                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.SourceCode, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.SourceCode, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="col-sm-4 col-form-label text-right font-bold">Users</label>
                                                @if (Model != null)
                                                {
                                                    if (Model.InsuranceID > 0)
                                                    {
                                                        <div class="col-md-5">
                                                            @Html.DropDownList("ProducerName", (IEnumerable<SelectListItem>)ViewBag.ListOfUsers, new { @class = "form-control form-control-sm" })
                                                        </div>
                                                    }

                                                }
                                                else
                                                {
                                                    <div class="col-md-5">
                                                        <select class="form-control form-control-sm" id="ProducerName" name="ProducerName"></select>
                                                    </div>
                                                }

                                            </div>

                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.PolicyNo, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                @if (Model != null)
                                                {
                                                    if (Model.InsuranceID > 0)
                                                    {
                                                        <div class="col-md-5">
                                                            @Html.EditorFor(model => model.PolicyNo, new { htmlAttributes = new { @class = "form-control form-control-sm", @readonly = "readonly" } })
                                                        </div>
                                                    }

                                                }
                                                else
                                                {
                                                    <div class="col-md-5">
                                                        @Html.EditorFor(model => model.PolicyNo, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                    </div>
                                                }
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.AssuredName, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.AssuredName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.AssuredMobile, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.AssuredMobile, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.SourceCode, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.SourceCode, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.SourceName, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.SourceName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.CustomerCategory, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.CustomerCategory, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.PolicyFromDate, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @*@Html.EditorFor(model => model.PolicyFromDate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { type = "date" , @class = "form-control form-control-sm" } })*@
                                                    @Html.TextBoxFor(model => model.PolicyFromDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.PolicyToDate, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.TextBoxFor(model => model.PolicyToDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.GrossPremium, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.GrossPremium, new { htmlAttributes = new { type = "number", @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.RevisedSumInsured, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.RevisedSumInsured, new { htmlAttributes = new { type = "number", @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.RenewalPremium, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.RenewalPremium, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.MarketingExecutive, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.MarketingExecutive, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            @*<div class="form-group row">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            </div>
        </div>*@
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @*<select class="form-control form-control-sm" name="Status" id="Status">
                    <option value="Lost">Lost</option>
                    <option value="Renewed">Renewed</option>
                    <option value="Under process">Under process</option>
                </select>*@
                                                    @Html.DropDownListFor(model => model.Status, listItems, "-- Select Status --", new { @class = "form-control form-control-sm" })

                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.CustomerCode, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.CustomerCode, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.Charges, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @Html.EditorFor(model => model.Charges, new { htmlAttributes = new { type = "number", @class = "form-control form-control-sm" } })
                                                </div>
                                            </div>
                                            @*<div class="form-group row">
            @Html.LabelFor(model => model.InsType, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.InsType, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            </div>
        </div>*@
                                            <div class="form-group row">
                                                @Html.LabelFor(model => model.InsType, htmlAttributes: new { @class = "col-sm-4 col-form-label text-right font-bold" })
                                                <div class="col-md-5">
                                                    @*<select class="form-control form-control-sm" name="InsType" id="Instype">
                    <option value="Travel">Travel</option>
                    <option value="Motor">Motor</option>
                    <option value="Individual">Individual</option>
                    <option value="Domestic">Domestic</option>
                </select>*@
                                                    @Html.DropDownListFor(model => model.InsType, lstInsType, "-- Select InsType --", new { @class = "form-control form-control-sm" })

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer justify-content-center">


                                <button type="button" id="btnClose" class="btn btn-secondary btn-sm waves-effect">Close</button>
                                <button type="button" id="btnFinish" class="btn btn-primary btn-sm waves-effect waves-light">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
                <!--Row-->
            </div>
            <!---Container Fluid-->
        </div>
    </div>
</div>
<script>
    function GetUsers(BT) {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#ProducerName").html(procemessage).show();
        var url = "/Home/GetUserList/";

        $.ajax({
            url: url,
            data: { BusinessType: BT },
            cache: false,
            type: "POST",
            success: function (data) {
                var lst = data.list
                var markup = "<option value='0'>Select Users</option>";
                for (var x = 0; x < lst.length; x++) {
                    markup += "<option value=" + lst[x].UserName + ">" + lst[x].UserName + "</option>";
                }
                $("#ProducerName").html(markup).show();


            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }



    $(document).ready(function () {
        //var BT = $('#BusinessType').val();
        //GetUsers(BT);
        //Toolbar extra buttons
        $('#btnFinish').on('click', function () {
            var formData = $('#MotorForm').serialize();
            $.ajax({

                type: "POST",
                url: "/Home/InsertNewInsur",
                dataType: "json",
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: formData,
                success: function (res) {
                    if (res == 1) {
                        alert('Record saved successully!');
                    }
                    else if (res == 2) {
                        alert('Record updated successully!');
                    }
                    else if (res == 0) {
                        alert('Record Already Exists');
                    }
                    else {
                        alert('Record Could not be saved!');
                    }
                },
                error: function () {
                    alert('Record Could not be saved!');
                }
            })
        });

        $('#btnClose').on('click', function () {
            window.location.href = "/Home/MasterDatabase" //in your case, /employee/empl

        });
        //var btnCancel = $('<button></button>').text('Cancel')
        //    .addClass('btn btn-danger btn-sm')
        //    .on('click', function () { $('#smartwizard').smartWizard("reset"); });

        // Smart Wizard

       
    });

</script>
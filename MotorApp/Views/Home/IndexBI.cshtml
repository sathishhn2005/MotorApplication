@*@model IEnumerable<MotorApp.BusinessEntities.BIDashBoard>*@
@model MotorApp.BusinessEntities.Insurance
@{ ViewBag.Title = "BI Dashboard"; }
@{
    List<SelectListItem> lstBT = new List<SelectListItem>();
    lstBT.Add(new SelectListItem
    {
        Text = "Admin",
        Value = "Admin"
    });
    lstBT.Add(new SelectListItem
    {
        Text = "Agent",
        Value = "Agent"

    });
    lstBT.Add(new SelectListItem
    {
        Text = "Broker",
        Value = "Broker"
    });
    lstBT.Add(new SelectListItem
    {
        Text = "Branches",
        Value = "Branches"
    });
    lstBT.Add(new SelectListItem
    {
        Text = "DirectSales",
        Value = "DirectSales"
    });
}
<div class="d-sm-flex align-items-center justify-content-between mb-2">
    <h1 class="h3 mb-0 text-gray-800">BI Dashboard</h1>

    <ol class="breadcrumb my-2">
        <li class="breadcrumb-item"><a href="./">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">BI Dashboard</li>
    </ol>
</div>
@*<div class="form-group row">

    <div class="col-md-2 my-4 text-center">

        <input type="button" id="btnSearchBIDB" onclick="GetBIDashBoardUserData()" value="Search" class="btn btn-primary btn-sm" />
    </div>

</div>*@

<div class="row mt-3">
    <div class="col-xl-6 col-lg-6">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Broker Renewed vs Available</h6>
                <div class="">
                    <label class="font-weight-bold mr-2">Yearly</label>
                    <input type="checkbox" id="broker" data-toggle="toggle" data-size="xs">
                </div>
            </div>
            <div class="card-body">
                <div class="Mchart-bar ">
                    <div id="BrokerRenewed" class="morris-charts" style="height: 250px"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-6 col-lg-6">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Agents Renewed VS Available </h6>
                <div class="">
                    <label class="font-weight-bold mr-2">Yearly</label>
                    <input type="checkbox" id="agent" data-toggle="toggle" data-size="xs">
                </div>
            </div>
            <div class="card-body">
                <div class="Mchart-bar ">
                    <div id="AgentsRenewed" class="morris-charts" style="height: 250px"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-6 col-lg-6">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Direct Sales Renewed VS Available</h6>
                <div class="">
                    <label class="font-weight-bold mr-2">Yearly</label>
                    <input type="checkbox" id="direct" data-toggle="toggle" data-size="xs">
                </div>
            </div>
            <div class="card-body">
                <div class="Mchart-bar ">
                    <div id="DirectRenewed" class="morris-charts" style="height: 250px"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-6 col-lg-6">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Branch Renewed VS Available </h6>
                <div class="">
                    <label class="font-weight-bold mr-2">Yearly</label>
                    <input type="checkbox" id="branch" data-toggle="toggle" data-size="xs">
                </div>
            </div>
            <div class="card-body">
                <div class="Mchart-bar ">
                    <div id="BranchRenewed" class="morris-charts" style="height: 250px"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-12 col-lg-12">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Producer's Performance </h6>
                @*<div class="">
                        <label class="font-weight-bold mr-2">Yearly</label>
                        <input type="checkbox" data-toggle="toggle" data-size="xs">
                    </div>*@
            </div>
            <div class="card-body">
                <canvas id="ProducerPerformance" height="100"></canvas>
            </div>
        </div>
    </div>
    <div class="col-xl-12 col-lg-12">
        <div class="card mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Specific Producer's Chart </h6>
                <div class="flex-grow-1">
                    <form class="form-inline  d-flex flex-row align-items-center justify-content-around">
                        <label for="cars" class="col-form-label">Choose Role</label>
                        <select id="ddlRole" onchange="javascript:GetUsers(this.value);" class="form-control form-control-sm col-md-3">
                            <option value="0">--Select--</option>
                            <option value="Broker">Broker</option>
                            <option value="Agent">Agent</option>
                            <option value="DirectSales">Direct Sales</option>
                            <option value="Branches">Branches</option>
                        </select>

                        @*<div class="col-md-4">
                                <label class="col-form-label text-right font-bold">Business Type</label>
                                @Html.DropDownListFor(model => model.BusinessType, lstBT, "-- Select BusinessType --",
                               new { @class = "form-control form-control-sm", @onchange = "javascript:GetUsers(this.value);" })

                            </div>*@
                        @*<div class="col-md-4">
                                <label class="col-form-label text-right font-bold">Users</label>
                                <select id="Users" name="Users" class="form-control form-control-sm">
                                    <option value="0">-Select-</option>
                                </select>
                            </div>*@
                        <label for="cars" class="col-form-label">Choose Producer</label>
                        <select id="Users" name="Users" class="form-control form-control-sm">
                            <option value="0">-Select-</option>
                        </select>
                        @*<select id="ddlProducer" class="form-control form-control-sm col-md-3">
                            <option>--Select--</option>
                            <option>BA001</option>
                            <option>BA818</option>
                            <option>BA237</option>
                            <option>BA233</option>
                        </select>*@
                        <button type="button" id="randomizeData" class="btn btn-primary btn-sm">Search</button>
                    </form>
                </div>
                <div class="">
                    <label class="font-weight-bold mr-2">Yearly</label>
                    <input type="checkbox" data-toggle="toggle" data-size="xs">
                </div>
            </div>
            <div class="card-body">
                <canvas id="SpecificProducer" height="100"></canvas>
            </div>
        </div>
    </div>
</div>
<script>
    var BrokerMorris;
    var AgentMorris;
    var DirectMorris;
    var BranchMorris;
    var SPBarAData = [];
    var SPBarBData = [];

    $('#branch').change(function () {
        GetYearWiseReport('Branch');
    });
    $("#broker").on('change', function () {
        if ($(this).is(':checked')) {
            $(this).attr('value', 'true');
            GetYearWiseReport('Broker');
        } else {
            $(this).attr('value', 'false');
            loadBroker();
        }

    });
    $("#agent").on('change', function () {
        if ($(this).is(':checked')) {
            $(this).attr('value', 'true');
            GetYearWiseReport('Agent');
        } else {
            $(this).attr('value', 'false');
            loadAgent();
        }

    });
    $("#direct").on('change', function () {
        if ($(this).is(':checked')) {
            $(this).attr('value', 'true');
            GetYearWiseReport('Direct');
        } else {
            $(this).attr('value', 'false');
            loadDirect();
        }

    });
    $("#branch").on('change', function () {
        if ($(this).is(':checked')) {
            $(this).attr('value', 'true');
            GetYearWiseReport('Branch');
        } else {
            $(this).attr('value', 'false');
            loadBranch();
        }

    });


    function GetYearWiseReport(BussType) {
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: "GetYearWiseReportMIDB?BussType='" + BussType + "'",
            data: { 'BusinessType': BussType },
            dataType: "json",
            success: function (Result) {
                console.log(Result);
                var res = JSON.parse(Result.lst);
                console.log(res);
                if (BussType == 'Broker')
                    BrokerMorris.setData(res.item);
                else if (BussType == 'Agent')
                    AgentMorris.setData(res.item);
                else if (BussType == 'Direct')
                    DirectMorris.setData(res.item);
                else if (BussType == 'Branch')
                    BranchMorris.setData(res.item);

            },
            error: function (Result) {
                alert("Error");
            }
        });
    }
    setTimeout(function () {
        loadBroker();
        loadAgent();
        loadDirect();
        loadBranch();
    }, 100);
    function loadBroker() {
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: "GetBIChartBoard",
            data: "{}",
            dataType: "json",
            success: function (Result) {
                chartDataBroker = Result.brokerList;
                BrokerMorris.setData(chartDataBroker);
            },
            error: function (Result) {
                alert("Error");
            }
        });
    }
    function loadAgent() {
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: "GetBIChartBoard",
            data: "{}",
            dataType: "json",
            success: function (Result) {
                chartDataAgent = Result.agentList;
                AgentMorris.setData(chartDataAgent);
            },
            error: function (Result) {
                alert("Error");
            }
        });
    }
    function loadDirect() {
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: "GetBIChartBoard",
            data: "{}",
            dataType: "json",
            success: function (Result) {
                chartDataDirect = Result.directList;
                DirectMorris.setData(chartDataDirect);
            },
            error: function (Result) {
                alert("Error");
            }
        });
    }
    function loadBranch() {
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: "GetBIChartBoard",
            data: "{}",
            dataType: "json",
            success: function (Result) {
                chartDataBranch = Result.branchList;
                BranchMorris.setData(chartDataBranch);
            },
            error: function (Result) {
                alert("Error");
            }
        });
    }
    window.onload = function () {
        BrokerMorris = Morris.Bar({
            element: 'BrokerRenewed',
            xkey: 'y',
            ykeys: ['a', 'b'],
            labels: ['Policies Renewed', 'Available Policies'],
            gridLineColor: '#eef0f2',
            barSizeRatio: 0.4,
            xLabelAngle: 45,
            resize: true,
            hideHover: 'auto',
            barColors: ['#4dc9f6', '#f67019']
        });
        AgentMorris = Morris.Bar({
            element: 'AgentsRenewed',
            xkey: 'y',
            ykeys: ['a', 'b'],
            labels: ['Policies Renewed', 'Available Policies'],
            gridLineColor: '#eef0f2',
            barSizeRatio: 0.4,
            xLabelAngle: 45,
            resize: true,
            hideHover: 'auto',
            barColors: ['#4dc9f6', '#f67019']
        });
        DirectMorris = Morris.Bar({
            element: 'DirectRenewed',
            xkey: 'y',
            ykeys: ['a', 'b'],
            labels: ['Policies Renewed', 'Available Policies'],
            gridLineColor: '#eef0f2',
            barSizeRatio: 0.4,
            xLabelAngle: 45,
            resize: true,
            hideHover: 'auto',
            barColors: ['#4dc9f6', '#f67019']
        });
        BranchMorris = Morris.Bar({
            element: 'BranchRenewed',
            xkey: 'y',
            ykeys: ['a', 'b'],
            labels: ['Policies Renewed', 'Available Policies'],
            gridLineColor: '#eef0f2',
            barSizeRatio: 0.4,
            xLabelAngle: 45,
            resize: true,
            hideHover: 'auto',
            barColors: ['#4dc9f6', '#f67019']
        });
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: "GetBIChartBoardProducerPerformance",
            data: "{}",
            dataType: "json",
            success: function (Result) {
                var Brokr = [];
                var PPMonth = [];
                var Agnt = [];
                var Branc = [];
                var DirSale = [];
                jQuery.each(Result.Agent, function (key, value) {

                    Agnt.push(value.b);
                    //write some code here to build the table? I'm just guessing
                });
                jQuery.each(Result.Broker, function (key, value) {

                    Brokr.push(value.b);
                    //write some code here to build the table? I'm just guessing
                });
                jQuery.each(Result.Broker, function (key, value) {

                    PPMonth.push(value.y);
                    //write some code here to build the table? I'm just guessing
                });
                jQuery.each(Result.Direct, function (key, value) {

                    DirSale.push(value.b);
                    //write some code here to build the table? I'm just guessing
                });
                jQuery.each(Result.Branch, function (key, value) {

                    Branc.push(value.b);
                    //write some code here to build the table? I'm just guessing
                });
                var myLine = new Chart(document.getElementById('ProducerPerformance'), {
                    type: 'line',
                    data: {
                        labels: PPMonth,
                        datasets: [{
                            label: 'Broker',
                            backgroundColor: '#8549ba',
                            borderColor: '#8549ba',
                            //data: [
                            //    20, 40, 13, 12, 25, 10, 5, 32, 6, 38, 20, 25
                            //],
                            data: Brokr,
                            fill: false,
                        }, {
                            label: 'Agent',
                            fill: false,
                            backgroundColor: '#E65A26',
                            borderColor: '#E65A26',
                            //data: [
                            //    40, 24, 15, 18, 10, 6, 20, 37, 12, 27, 14, 3
                            //],

                            data: Agnt,
                        }, {
                            label: 'Direct Sale',
                            fill: false,
                            backgroundColor: '#537bc4',
                            borderColor: '#537bc4',
                            //data: [
                            //    24, 35, 20, 10, 16, 27, 39, 40, 27, 10, 9, 29
                            //],

                            data: DirSale,
                        }, {
                            label: 'Branch',
                            fill: false,
                            backgroundColor: '#acc236',
                            borderColor: '#acc236',
                            //data: [
                            //    3, 40, 24, 35, 16, 19, 29, 35, 10, 35, 6, 14
                            //],
                            data: Branc,
                        }]
                    },
                    options: {
                        responsive: true,
                        tooltips: {
                            mode: 'index',
                            intersect: false,
                        },
                        hover: {
                            mode: 'nearest',
                            intersect: true
                        },
                        scales: {
                            xAxes: [{
                                display: true,
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Month'
                                }
                            }],
                            yAxes: [{
                                display: true,
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Value'
                                }
                            }]
                        }
                    }
                });
            },
            error: function (Result) {
                alert("Error");
            }
        });

        function initspMorris(SPBarAData, SPBarBData) {
            var spBarChart = new Chart(document.getElementById("SpecificProducer"), {
                "type": "bar",
                "data": {
                    "labels": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                    "datasets": [{
                        "label": 'Renewed',
                        "backgroundColor": '#E65A26',
                        "borderColor": '#E65A26',
                        "borderWidth": 1,
                        "data": SPBarAData,
                    }, {
                        "label": 'Available',
                        "backgroundColor": '#537bc4',
                        "borderColor": '#537bc4',
                        "borderWidth": 1,
                        "data": SPBarBData,
                    }]

                },
                "options": {
                    "scales": {
                        "yAxes": [{
                            "ticks": {
                                "beginAtZero": true
                            }
                        }]
                    }
                }
            });
        }
        document.getElementById('randomizeData').addEventListener('click', function () {
            var BussType = $("#ddlRole").val();
            var ProducerName = $("#Users").val();
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "GetSpecificProducerDBChart",
                data: { 'ProducerName': ProducerName, 'BusinessType': BussType, },
                dataType: "json",
                success: function (Result) {
                    //console.log(Result.lst);
                    var res = Result.lst;
                    var SPBarAData = []; jQuery.each(res, function (key, value) {

                        SPBarAData.push(value.a);
                    });
                    var SPBarBData = []; jQuery.each(res, function (key, value) {

                        SPBarBData.push(value.b);
                    });
                    initspMorris(SPBarAData, SPBarBData);
                    //console.log(res);
                    //spBarChart.data.datasets.forEach(function (res) {
                    //    dataset.res = dataset.data.map(function () {
                    //        return randomScalingFactor();
                    //    });

                    //});
                    //spBarChart.update();
                },
                error: function (Result) {
                    alert("Error");
                }
            });
            //spBarChart.data.datasets.forEach(function (dataset) {
            //    dataset.data = dataset.data.map(function () {
            //        return randomScalingFactor();
            //    });

            //});
            //spBarChart.update();
        });
    };
    function GetUsers(BT) {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#Users").html(procemessage).show();
        var url = "/Home/GetUserListBIDashBoard/";

        $.ajax({
            url: url,
            data: { BusinessType: BT },
            cache: false,
            type: "POST",
            success: function (data) {
                var lst = data.list
                var markup = "<option value='0'>Select Users</option>";
                for (var x = 0; x < lst.length; x++) {
                    markup += "<option value=" + lst[x].UserName + ">" + lst[x].UserName + "</option>";
                }
                $("#Users").html(markup).show();


            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }
    function GetBIDashBoardUserData() {
        var BussType = $('#BusinessType').val();
        var Users = $('#Users').val();
        $.ajax({
            url: url,
            data: { UserName: Users },
            cache: false,
            type: "POST",
            success: function (data) {
                var lst = data.list
                var markup = "<option value='0'>Select Users</option>";
                for (var x = 0; x < lst.length; x++) {
                    markup += "<option value=" + lst[x].UserName + ">" + lst[x].UserName + "</option>";
                }
                $("#Users").html(markup).show();


            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });


    }
</script>
@*SP_GetUserInsInfo*@
